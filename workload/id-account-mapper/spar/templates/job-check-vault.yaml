apiVersion: v1
kind: Secret
metadata:
  name: vault-credential
  namespace: {{ .Values.namespace }}
  annotations:
    argocd.argoproj.io/hook: PreSync
    argocd.argoproj.io/hook-delete-policy: HookSucceeded
type: Opaque
data:
  VAULT_TOKEN: {{ .Values.identity.global.secrets.VAULT_SECRET_TOKEN | quote }}
---

apiVersion: batch/v1
kind: Job
metadata:
  name: check-vault-health
  namespace: {{ .Values.namespace }}
  annotations:
    argocd.argoproj.io/hook: PreSync
    argocd.argoproj.io/hook-delete-policy: HookSucceeded
spec:
  template:
    spec:
      containers:
      - name: check-vault-health
        image: curlimages/curl:latest 
        env:
        - name: VAULT_ADDR
          value: "http://vault.vault.svc.cluster.local:8200" 
        - name: VAULT_TOKEN
          valueFrom:
            secretKeyRef:
              name: vault-credential
              key: VAULT_TOKEN
        command: ["sh", "-c"]
        args:
        - |
          while true; do
            response=$(curl -s -o /dev/null -w "%{http_code}" -H "X-Vault-Token: $VAULT_TOKEN" $VAULT_ADDR/v1/sys/health)

            if [ "$response" == "200" ] || [ "$response" == "429" ]; then
              echo "Vault is healthy! (Response: $response)";
              break;
            else
              echo "Vault not ready yet. (Response: $response)";
              sleep 5;
            fi
          done;
          echo "Vault health check passed!";
      restartPolicy: Never
  backoffLimit: 4

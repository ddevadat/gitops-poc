postgres:
  db_password: <path:ocivault#openg2p_pg_password#latest | base64decode> 

domain: <path:ocivault#openg2p_domain#latest | base64decode> 

spar:
  global:
    sparHostname: spar.<path:ocivault#openg2p_domain#latest | base64decode>
    esignetBaseUrl: https://esignet.<path:ocivault#openg2p_domain#latest | base64decode>
    sparAuthClientId: 'openg2p_selfservice_client_secret'
    sparAuthClientSecret: <path:ocivault#openg2p_selfservice_client_secret#latest | base64decode>
    keycloakBaseUrl: https://keycloak.<path:ocivault#openg2p_domain#latest | base64decode>
    keycloakIssuerUrl: '{{ tpl .Values.global.keycloakBaseUrl $ }}/realms/openg2p'
    sparKeymanagerInstallationName: 'keymanager.keymanager'

  postgresql:
    enabled: false
    istio:
      enabled: false
      virtualservice:
        enabled: false
      gateway:
        enabled: false

  keymanager:
    enabled: true
    hostname: keymanager.<path:ocivault#openg2p_domain#latest | base64decode> 
    springConfig:
      names: application,kernel
      profile: default
      gitRepo:
        enabled: true
        repoUrl: https://github.com/openg2p/mosip-config
        branch: master
      rawConfig: ""
    envVars:
      auth_server_admin_allowed_audience: 'openg2p-sr,openg2p-sr-{{ .Release.Namespace }},openg2p-pbms,openg2p-pbms-{{ .Release.Namespace }},openg2p-spar-{{ .Release.Namespace }}'


  spar-mapper-api:
    enabled: false
    global:
      sparHostname: spar.<path:ocivault#openg2p_domain#latest | base64decode>
    postgresql:
      enabled: false
    envVars:
      SPAR_MAPPER_DB_HOSTNAME: postgres-postgresql.postgres
    envVarsFrom:
      SPAR_MAPPER_DB_PASSWORD:
        secretKeyRef:
          name: postgres-postgresql
          key: password

    istio:
      enabled: true
      virtualservice:
        enabled: true
        host: spar.<path:ocivault#openg2p_domain#latest | base64decode>
        gateway: "istio-system/all-hosts"
        destination: '{{ include "mapper.fullname" . }}'
        destinationPort: '{{ .Values.service.port }}'
        prefix: /api/mapper/
        rewriteUri: "/"
      gateway:
        enabled: false
        host: ""
        ingressController:
          istio: gateway
        httpTlsRedirect: true
        httpEnabled: true
        httpsEnabled: false
        tls:
          mode: SIMPLE
          credentialName: ""

  spar-self-service-api:
    enabled: false
    global:
      sparHostname: spar.<path:ocivault#openg2p_domain#latest | base64decode>
    postgresql:
      enabled: false
    postgresInit:
      enabled: false
    envVars:
      SPAR_SELFSERVICE_DB_HOSTNAME: postgres-postgresql.postgres
      SPAR_SELFSERVICE_AUTH_DEFAULT_ISSUERS: '["https://esignet.<path:ocivault#openg2p_domain#latest | base64decode>/v1/esignet","https://keycloak.<path:ocivault#openg2p_domain#latest | base64decode>/realms/openg2p"]'
      SPAR_SELFSERVICE_AUTH_DEFAULT_JWKS_URLS: '["https://esignet.<path:ocivault#openg2p_domain#latest | base64decode>/v1/esignet/oauth/.well-known/jwks.json","https://keycloak.<path:ocivault#openg2p_domain#latest | base64decode>/realms/openg2p/protocol/openid-connect/certs"]'
    envVarsFrom:
      SPAR_SELFSERVICE_DB_PASSWORD:
        secretKeyRef:
          name: postgres-postgresql
          key: password

    istio:
      enabled: true
      virtualservice:
        enabled: true
        host: spar.<path:ocivault#openg2p_domain#latest | base64decode>
        gateway: "istio-system/all-hosts"
        destination: '{{ include "selfservice.fullname" . }}'
        destinationPort: '{{ .Values.service.port }}'
        prefix: /api/selfservice/
        rewriteUri: "/"
      gateway:
        enabled: false
        host: ""
        ingressController:
          istio: gateway
        httpTlsRedirect: true
        httpEnabled: true
        httpsEnabled: false
        tls:
          mode: SIMPLE
          credentialName: ""

  spar-self-service-ui:
    enabled: false
    global:
      sparHostname: spar.<path:ocivault#openg2p_domain#latest | base64decode>

    istio:
      enabled: true
      virtualservice:
        enabled: true
        host: spar.<path:ocivault#openg2p_domain#latest | base64decode>
        gateway: "istio-system/all-hosts"
        destination: '{{ include "selfserviceUi.fullname" . }}'
        destinationPort: '{{ .Values.service.port }}'
        prefix: /selfservice
        rewriteUri: ""
      gateway:
        enabled: false
        host: ""
        ingressController:
          istio: gateway
        httpTlsRedirect: true
        httpEnabled: true
        httpsEnabled: false
        tls:
          mode: SIMPLE
          credentialName: ""

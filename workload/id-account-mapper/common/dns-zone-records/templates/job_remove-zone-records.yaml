apiVersion: v1
kind: ServiceAccount
metadata:
  name: istio-ansible-sa-post-delete
  namespace: istio-system
  annotations:
    argocd.argoproj.io/hook: PostDelete
    argocd.argoproj.io/hook-delete-policy: HookSucceeded
---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: istio-ansible-svc-reader-post-delete
  annotations:
    argocd.argoproj.io/hook: PostDelete
    argocd.argoproj.io/hook-delete-policy: HookSucceeded
rules:
- apiGroups: [""]
  resources: ["pods", "services"]
  verbs: ["get", "list"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: istio-ansible-svc-reader-post-delete-binding
  annotations:
    argocd.argoproj.io/hook: PostDelete
    argocd.argoproj.io/hook-delete-policy: HookSucceeded
subjects:
- kind: ServiceAccount
  name: istio-ansible-sa-post-delete 
  namespace: istio-system
roleRef:
  kind: ClusterRole
  name: istio-ansible-svc-reader-post-delete 
  apiGroup: rbac.authorization.k8s.io

---

apiVersion: batch/v1
kind: Job
metadata:
  name: remove-zone-record
  namespace: {{ .Values.namespace }}
  annotations:
    argocd.argoproj.io/hook: PostDelete
    argocd.argoproj.io/hook-delete-policy: HookSucceeded
spec:
  template:
    spec:
      serviceAccountName: istio-ansible-sa-post-delete
      containers:
      - name: configmanager
        image: ghcr.io/oci-sunbird/ociop:latest
        command: ["ansible-playbook"]
        args: ["/root/.oci/playbooks/remove_zone_record_playbook.yaml", "-i", "/root/.oci/inventory/inventory"]
        volumeMounts:
        - name: inventory-volume
          mountPath: /root/.oci/inventory
        - name: playbooks-volume
          mountPath: /root/.oci/playbooks
      restartPolicy: Never
      volumes:
      - name: inventory-volume
        configMap:
          name: {{ .Chart.Name }}-ansible-inventory
      - name: playbooks-volume
        configMap:
          name: {{ .Chart.Name }}-ansible-playbooks
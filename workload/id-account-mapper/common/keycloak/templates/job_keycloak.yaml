apiVersion: v1
kind: ServiceAccount
metadata:
  name: keycloak-setup-sa
  namespace: {{ .Values.namespace }}
  annotations:
    argocd.argoproj.io/hook: PreSync
    argocd.argoproj.io/hook-delete-policy: HookSucceeded
---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: keycloak-setup-config-reader
  annotations:
    argocd.argoproj.io/hook: PreSync
    argocd.argoproj.io/hook-delete-policy: HookSucceeded
rules:
- apiGroups: [""]
  resources: ["pods", "services"]
  verbs: ["get", "list"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: keycloak-setup-config-reader-binding
  annotations:
    argocd.argoproj.io/hook: PreSync
    argocd.argoproj.io/hook-delete-policy: HookSucceeded
subjects:
- kind: ServiceAccount
  name: keycloak-setup-sa 
  namespace: keycloak
roleRef:
  kind: ClusterRole
  name: keycloak-setup-config-reader 
  apiGroup: rbac.authorization.k8s.io

---

apiVersion: batch/v1
kind: Job
metadata:
  name: keycloak-setup
  namespace: {{ .Values.namespace }}
  annotations:
    argocd.argoproj.io/hook: PreSync
    argocd.argoproj.io/hook-delete-policy: HookSucceeded
spec:
  template:
    spec:
      serviceAccountName: keycloak-setup-sa
      containers:
      - name: configmanager
        image: ghcr.io/oci-sunbird/ociop:latest
        command: ["ansible-playbook"]
        args: ["/root/.oci/playbooks/update_zone_record_playbook.yaml", "-i", "/root/.oci/inventory/inventory"]
        volumeMounts:
        - name: utils-volume
          mountPath: /root/.oci/utils
        - name: scripts-volume
          mountPath: /root/.oci/scripts
      restartPolicy: Never
      volumes:
      - name: utils-volume
        configMap:
          name: {{ .Chart.Name }}-utils
      - name: scripts-volume
        configMap:
          name: {{ .Chart.Name }}-scripts
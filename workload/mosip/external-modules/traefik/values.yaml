ansibleenv:
  zone_compartment_id: <path:ocivault#zone_compartment_id#latest | base64decode>
  domain: <path:ocivault#openg2p_domain#latest | base64decode>

domain_ssl_secret_name: <path:ocivault#openg2p_domain_ssl_secret_name#latest | base64decode>


traefik:
  # globalArguments:
  # - "--api.insecure=true"
  # tlsOptions:
  #   default:
  #     labels: {}
  #     sniStrict: true
  #     maxVersion: VersionTLS13
  #     minVersion: VersionTLS12
  #   custom-options:
  #     labels: {}
  #     curvePreferences:
  #       - CurveP521
  #       - CurveP384
  # tlsStore:
  #   default:
  #     defaultCertificate:
  #       secretName: <path:ocivault#openg2p_domain_ssl_secret_name#latest | base64decode>
  ingressRoute:
    dashboard:
      enabled: true
      # Custom match rule with host domain
      matchRule: Host(`traefik.<path:ocivault#openg2p_domain#latest | base64decode>`)
      entryPoints: ["websecure","web"]
      # Add custom middlewares : authentication and redirection
      middlewares:
        - name: traefik-dashboard-auth
      tls:
        secretName: <path:ocivault#openg2p_domain_ssl_secret_name#latest | base64decode>
  extraObjects:
  # - apiVersion: v1
  #   kind: Service
  #   metadata:
  #     name: traefik-api
  #   spec:
  #     type: ClusterIP
  #     selector:
  #       app.kubernetes.io/name: traefik
  #       app.kubernetes.io/instance: traefik-traefik
  #     ports:
  #     - port: 8080
  #       name: traefik
  #       targetPort: 8080
  #       protocol: TCP

  - apiVersion: v1
    kind: Secret
    metadata:
      name: traefik-dashboard-auth-secret
    type: kubernetes.io/basic-auth
    stringData:
      username: admin
      password: <path:ocivault#mosip_minio_admin_password#latest | base64decode>
  - apiVersion: traefik.io/v1alpha1
    kind: Middleware
    metadata:
      name: traefik-dashboard-auth
    spec:
      basicAuth:
        secret: traefik-dashboard-auth-secret
  # - apiVersion: networking.k8s.io/v1
  #   kind: Ingress
  #   metadata:
  #     name: traefik-dashboard
  #     annotations:
  #       traefik.ingress.kubernetes.io/router.entrypoints: websecure
  #       traefik.ingress.kubernetes.io/router.middlewares: traefik-dashboard-auth@@kubernetescrd
  #   spec:
  #     rules:
  #     - host: traefik.<path:ocivault#openg2p_domain#latest | base64decode>
  #       http:
  #         paths:
  #         - path: /
  #           pathType: Prefix
  #           backend:
  #             service:
  #               name: traefik-api
  #               port:
  #                 name: traefik
  ports:
    # traefik:
    #   expose:
    #     default: true
    # web:
    #   redirections:
    #     entryPoint:
    #       to: websecure
    #       scheme: https
    #       permanent: true
  service:
    annotations:
      oci.oraclecloud.com/load-balancer-type: lb
      oci.oraclecloud.com/ingress-ip-mode: "Proxy"
      service.beta.kubernetes.io/oci-load-balancer-backend-protocol: HTTP
      service.beta.kubernetes.io/oci-load-balancer-shape: flexible
      service.beta.kubernetes.io/oci-load-balancer-shape-flex-max: "100"
      service.beta.kubernetes.io/oci-load-balancer-shape-flex-min: "10"
      service.beta.kubernetes.io/oci-load-balancer-ssl-ports: "443"
      # service.beta.kubernetes.io/oci-load-balancer-tls-secret: <path:ocivault#openg2p_domain_ssl_secret_name#latest | base64decode>
      service.beta.kubernetes.io/oci-load-balancer-subnet1: <path:ocivault#mosip_public_lb_subnet_id#latest | base64decode>
      oci.oraclecloud.com/oci-network-security-groups: <path:ocivault#mosip_public_lb_nsg_id#latest | base64decode>
      oci.oraclecloud.com/security-rule-management-mode: "None"  
    type: LoadBalancer
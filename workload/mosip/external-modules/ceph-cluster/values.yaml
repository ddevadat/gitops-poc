ceph_istio_enabled: true
prometheus_enabled: false
ceph_domain: ceph.<path:ocivault#mosip_domain#latest | base64decode>

rook-ceph-cluster:
  monitoring:
    # -- Enable Prometheus integration, will also create necessary RBAC rules to allow Operator to create ServiceMonitors.
    # Monitoring requires Prometheus to be pre-installed
    enabled: true
    # -- Whether to create the Prometheus rules for Ceph alerts
    createPrometheusRules: true
    # -- The namespace in which to create the prometheus rules, if different from the rook cluster namespace.
    # If you have multiple rook-ceph clusters in the same k8s cluster, choose the same namespace (ideally, namespace with prometheus
    # deployed) to set rulesNamespaceOverride for all the clusters. Otherwise, you will get duplicate alerts with multiple alert definitions.
    rulesNamespaceOverride: monitoring-stack
    # Monitoring settings for external clusters:
    # externalMgrEndpoints: <list of endpoints>
    # externalMgrPrometheusPort: <port>
    # Scrape interval for prometheus
    # interval: 10s
    # allow adding custom labels and annotations to the prometheus rule
    prometheusRule:
      # -- Labels applied to PrometheusRule
      labels: {}
      # -- Annotations applied to PrometheusRule
      annotations: {}
  toolbox:
    enabled: true
    tolerations: 
    - key: "node-role.kubernetes.io/rook-node"
      operator: "Exists"
      effect: "NoSchedule"
    affinity: 
      oke.oraclecloud.com/pool.name: rook
  cephClusterSpec:
    dashboard:
      enabled: true
      ssl: false
    mgr:
      # When higher availability of the mgr is needed, increase the count to 2.
      # In that case, one mgr will be active and one in standby. When Ceph updates which
      # mgr is active, Rook will update the mgr services to match the active mgr.
      count: 2
      allowMultiplePerNode: false
      modules:
        - name: rook
          enabled: true
    placement:
      all:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                - key: oke.oraclecloud.com/pool.name
                  operator: In
                  values:
                  - rook
        podAffinity:
          oke.oraclecloud.com/pool.name: rook
        tolerations:
        - key: "node-role.kubernetes.io/rook-node"
          operator: "Exists"
          effect: "NoSchedule"
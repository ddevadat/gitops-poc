monitoring_stack_istio_enabled: true
grafana_domain: grafana.<path:ocivault#mosip_domain#latest | base64decode>
prometheus_domain: prom.<path:ocivault#mosip_domain#latest | base64decode>

kube-prometheus-stack:
  prometheus:
    prometheusSpec:
      serviceMonitorSelectorNilUsesHelmValues: false
      additionalScrapeConfigs:
      # - job_name: 'process-exporter'
      #   scrape_interval: 10s
      #   static_configs:
      #     - targets:
      #         - 'process-exporter.process-exporter-ns.svc.cluster.local:9256'
      - job_name: 'process-exporter'
        scrape_interval: 10s
        kubernetes_sd_configs:
          - role: pod
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_node_name]
            target_label: node
          - source_labels: [__meta_kubernetes_pod_ip]
            target_label: __address__
            regex: (.*)
            replacement: ${1}:9256
  grafana:
    adminPassword: "<path:ocivault#mosip_minio_admin_password#latest | base64decode>"
    datasources: 
      datasources.yaml:
        apiVersion: 1
        datasources:
        - name: Oracle Cloud Infrastructure Metrics
          type: oci-metrics-datasource
          access: proxy
          disableDeletion: true
          editable: true
          jsonData:
            tenancyOCID: <path:ocivault#tenancy_id#latest | base64decode>
            defaultRegion: <path:ocivault#oci_region#latest | base64decode>
            environment: "OCI Instance"

    dashboards: 
      default:
        ceph-cluster:
          gnetId: 2842
          revision: 18
          datasource: Prometheus
        ceph-osd-single:
          gnetId: 5336
          revision: 9
          datasource: Prometheus
        ceph-pools:
          gnetId: 5342
          revision: 9
          datasource: Prometheus
        # minio:
        #   gnetId: 13502
        #   revision: 26
        #   datasource: Prometheus
    dashboardProviders:
       dashboardproviders.yaml:
         apiVersion: 1
         providers:
         - name: 'default'
           orgId: 1
           folder: ''
           type: file
           disableDeletion: true
           editable: true
           options:
             path: /var/lib/grafana/dashboards/default
    sidecar:
      datasources:
        enabled: true
        label: grafana_datasource
      dashboards:
        enabled: true
        label: grafana_dashboard
    plugins:
      - oci-logs-datasource
      - oci-metrics-datasource
      - grafana-kubernetes-app
      - grafana-worldmap-panel
      - grafana-piechart-panel
      - btplc-status-dot-panel

prometheus-postgres-exporter:
  serviceMonitor:
    enabled: true
  config:
    logLevel: debug
    ## The datasource properties on config are passed through helm tpl function.
    ## ref: https://helm.sh/docs/developing_charts/#using-the-tpl-function
    datasource:
      # Specify one of both datasource or datasourceSecret
      host: <path:ocivault#genpg_host#latest | base64decode>           #  postgres-postgresql.postgres
      user: admin
      password: <path:ocivault#genpg#latest | base64decode> 
      port: "5432"
      database: 'appdb'
      sslmode: require

    # extraArgs:
    #   - "--extend.query-path=/etc/config/queries.yaml"
  extraEnvs: 
    - name: PG_EXPORTER_CUSTOM_METRICS_PATH
      value: /etc/config/custom_metrics.yaml

  extraVolumes:
    - name: custom-queries
      configMap:
        name: postgres-exporter-queries

  extraVolumeMounts:
    - name: custom-queries
      mountPath: /etc/config
      readOnly: true

  extraManifests: 
    - apiVersion: v1
      kind: ConfigMap
      metadata:
        name: postgres-exporter-queries
        labels:
          name: postgres-exporter-extra
      data:
        custom_metrics.yaml: |
          metrics:
            - name: pg_database_size
              query: |
                SELECT pg_database.datname, pg_database_size(pg_database.datname) as bytes FROM pg_database;
              metrics:
                - datname:
                    usage: "LABEL"
                    description: "Name of the database"
                - bytes:
                    usage: "GAUGE"
                    description: "Disk space used by the database"

            - name: oci_custom_replication_lag
              query: |
                select pg_stat_replication.application_name,pg_stat_replication.client_addr, pg_wal_lsn_diff(pg_current_wal_lsn(), replay_lsn) / 1024 / 1024 AS lag_mb from  pg_stat_replication;              
              metrics:
                - application_name:
                    usage: "LABEL"
                    description: "Name of the application"
                - client_addr:
                    usage: "LABEL"
                    description: "Name of the client"
                - lag_mb:
                    usage: "GAUGE"
                    description: "Lag in Mb"

            - name: pg_replication_slot
              query: |
                select pid, client_addr, state, sync_state,
                    pg_wal_lsn_diff(sent_lsn, write_lsn) as write_lsn_diff,
                    pg_wal_lsn_diff(sent_lsn, flush_lsn) as flush_lsn_diff,
                    pg_wal_lsn_diff(sent_lsn, replay_lsn) as replay_lsn_diff
                from pg_stat_replication;
              metrics:
                - pid:
                    usage: "LABEL"
                - client_addr:
                    usage: "LABEL"
                - write_lsn_diff:
                    usage: "GAUGE"
                    description: "The write lag in bytes"
                    metric_name: pg_stat_replication_write_lsn_diff
                - flush_lsn_diff:
                    usage: "GAUGE"
                    description: "The flush lag in bytes"
                    metric_name: pg_stat_replication_flush_lsn_diff
                - replay_lsn_diff:
                    usage: "GAUGE"
                    description: "The replay lag in bytes"
                    metric_name: pg_stat_replication_replay_lsn_diff
            - name: pg_replication_slot_lag_bytes
              query: |
                SELECT
                  slot_name,
                  slot_type,
                  database,
                  active,
                  pg_wal_lsn_diff(pg_current_wal_lsn(), restart_lsn) AS lag_bytes
                FROM pg_replication_slots;
              metrics:
                - lag_bytes:
                    usage: GAUGE
                    description: "Replication lag in bytes"
                    metric_name: pg_replication_slots_pg_wal_lsn_diff
                - slot_name:
                    usage: LABEL
                - slot_type:
                    usage: LABEL
                - database:
                    usage: LABEL
                - active:
                    usage: LABEL

            - name: long_queries_avg_exec_time
              query: |
                SELECT
                  queryid::text AS queryid,
                  query,
                  calls AS long_queries_calls,
                  rows AS long_queries_rows,
                  min_exec_time AS long_queries_min_exec_time,
                  max_exec_time AS long_queries_max_exec_time,
                  total_exec_time / NULLIF(calls, 0) AS long_queries_avg_exec_time
                FROM pg_stat_statements
                WHERE calls >= 100;
              metrics:
                - long_queries_calls:
                    usage: GAUGE
                - long_queries_rows:
                    usage: GAUGE
                - long_queries_min_exec_time:
                    usage: GAUGE
                - long_queries_max_exec_time:
                    usage: GAUGE
                - long_queries_avg_exec_time:
                    usage: GAUGE
                - queryid:
                    usage: LABEL
              databases:
                - appdb
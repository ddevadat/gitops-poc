apiVersion: v1
kind: ServiceAccount
metadata:
  name: istio-ansible-sa-int
  namespace: istio-system
  annotations:
    argocd.argoproj.io/hook: PostSync
    argocd.argoproj.io/hook-delete-policy: HookSucceeded
---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: istio-ansible-svc-reader-int
  annotations:
    argocd.argoproj.io/hook: PostSync
    argocd.argoproj.io/hook-delete-policy: HookSucceeded
rules:
- apiGroups: [""]
  resources: ["pods", "services"]
  verbs: ["get", "list","patch","update"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: istio-ansible-svc-reader-int-binding
  annotations:
    argocd.argoproj.io/hook: PostSync
    argocd.argoproj.io/hook-delete-policy: HookSucceeded
subjects:
- kind: ServiceAccount
  name: istio-ansible-sa-int 
  namespace: istio-system
roleRef:
  kind: ClusterRole
  name: istio-ansible-svc-reader-int 
  apiGroup: rbac.authorization.k8s.io

---
apiVersion: batch/v1
kind: Job
metadata:
  name: update-k8s-svc-int
  namespace: {{ .Values.namespace }}
  annotations:
    argocd.argoproj.io/hook: PostSync
spec:
  serviceAccountName: istio-ansible-sa-int
  template:
    spec:
      initContainers:
      - name: init-script
        image: busybox                      
        command: ["/bin/sh", "-c"]
        args:
          - "cp /root/.oci/install/* /tmp/working-directory/ && cp /root/.oci/playbooks/* /tmp/working-directory/ && chmod +x /tmp/working-directory/* "
        volumeMounts:
        - name: install-volume
          mountPath: /root/.oci/install 
        - name: playbook-volume
          mountPath: /root/.oci/playbooks                    
        - name: writable-dir
          mountPath: /tmp/working-directory      
      containers:
      - name: configmanager
        image: ghcr.io/oci-sunbird/ociop:latest
        command: ["ansible-playbook"]
        args: ["/tmp/working-directory/update_zone_record_playbook.yaml", "-i", "/tmp/working-directory/inventory"]
        volumeMounts:
        - name: writable-dir
          mountPath: /tmp/working-directory 
      restartPolicy: Never
      volumes:
      - name: install-volume
        configMap:
          name: {{ .Chart.Name }}-ansible-inventory-internal
      - name: playbook-volume
        configMap:
          name: {{ .Chart.Name }}-ansible-playbooks-internal
      - name: writable-dir
        emptyDir: {}   

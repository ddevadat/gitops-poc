elasticsearch:
  esJavaOpts: "-Xms3g -Xmx3g"
  resources:
    requests:
      cpu: "100m"
      memory: "1Gi"
    limits:
      cpu: "1000m"
      memory: "4Gi"
  volumeClaimTemplate:
    storageClassName: longhorn
    resources:
      requests:
        storage: 1Gi

filestorage:
  storage_size: 1Gi
  storage_class_name: longhorn
  filestorageenv:
    MINIO_ROOT_PASSWORD: <path:ocivault#minio-admin-password#latest | base64decode>

keycloak:
  keycloakenv:
    DB_PASSWORD: <path:ocivault#functional_registry_postgres_app_password#latest | base64decode>
    KEYCLOAK_PASSWORD: <path:ocivault#sbrc_keycloak_admin_password#latest | base64decode> 
    DB_ADDR: <path:ocivault#postgress_db_host#latest | base64decode> 
    DB_USER: <path:ocivault#functional_registry_postgres_app_user#latest | base64decode>
    DOMAIN_NAME: argosbrciam.<path:ocivault#functional_registry_domain#latest | base64decode>
    ADMIN_API_SECRET: <path:ocivault#sbrc_keycloak_admin_api_secret#latest | base64decode>

identity: 
  global:
    host: "argosbrciam.<path:ocivault#functional_registry_domain#latest | base64decode>"
    base_urls:
      identity: http://functional-registry-identity-service:3332 
      web_did: http://functional-registry-identity-service:3332
      credential_schema: http://functional-registry-credential-schema-service:3333
      credential_service: http://functional-registry-credentials-service:3000
    secrets:
      VAULT_SECRET_TOKEN: <path:ocivault#vault_root_token#latest>
      DB_URL: <path:ocivault#db_url#latest>
  identity-service:
    ingress:
      enabled: false

  credential-schema-service:
    ingress:
      enabled: false

  credentials-service:
    ingress:
      enabled: false

claim-ms:
  claim_msenv:
    connectionInfo_uri: <path:ocivault#claims_ms_db_url#latest | base64decode>
    connectionInfo_username: <path:ocivault#functional_registry_postgres_app_user#latest | base64decode>
    connectionInfo_password: <path:ocivault#functional_registry_postgres_app_password#latest | base64decode>
